{"version":3,"file":"static/js/216.08e27791.chunk.js","mappings":"6NAEe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAClC,OACE,4BACE,gBACEC,IACED,EAAME,YAAN,UAPK,mCAOL,OACgBF,EAAME,aADtB,UAEOC,2BAFP,qBAIFC,IAAKJ,EAAMK,SAEb,0BACGL,EAAMM,gBACP,gCAAQN,EAAMO,aAAaC,MAAM,EAAG,GAApC,WAEF,wCAEE,4BAA4B,GAArBR,EAAMS,aAAb,YAEF,sCACA,uBAAIT,EAAMU,YACV,4BACE,uCACA,wBACGV,EAAMW,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAME,e,uBCvBZ,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,2BACE,yBACE,SAAC,KAAD,CAASC,GAAG,OAAOC,MAAO,CAAEC,KAAMJ,GAAlC,qBAIF,yBACE,SAAC,KAAD,CAASE,GAAG,UAAUC,MAAO,CAAEC,KAAMJ,GAArC,2BAKJ,SAAC,KAAD,O,uBCdAK,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,iCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCACZ,SAASE,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACJE,GAAWC,EAAAA,EAAAA,OACfC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAwBL,GAASM,MAAK,SAAAlC,GACpC2B,EAAS3B,QAEV,CAAC4B,IAIJ,OACE,iCACE,mBAAQO,QALO,WACjBL,EAAS,MAIP,sBACC9B,IAAS,SAACD,EAAD,CAAWC,MAAOA,IAC3BA,IACC,4BACE,oDACA,SAAC,EAAAoC,SAAD,CACEC,UAAU,SAAC,IAAD,CAASvB,KAAK,wBAAwBwB,MAAM,YADxD,UAGE,SAAC,KAAD,WACE,UAAC,KAAD,CAAOC,KAAK,GAAGC,SAAS,SAACxB,EAAD,IAAxB,WACE,SAAC,KAAD,CAAOuB,KAAK,OAAOC,SAAS,SAAClB,EAAD,CAAMtB,MAAOA,OACzC,SAAC,KAAD,CAAOuC,KAAK,UAAUC,SAAS,SAAChB,EAAD,CAASxB,MAAOA,qB,0JC9BzDyC,G,QAAU,oCACVC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAjC,SACyBC,IAAAA,IAAUD,GADnC,uBACUE,EADV,EACUA,KADV,kBAESA,GAFT,mEAKO,SAASC,IACd,OAAOJ,EAAY,GAAD,OAAID,EAAJ,sCAA0CD,IAGvD,SAASO,EAAepB,GAC7B,OAAOe,EAAY,GAAD,OACbD,EADa,iBACId,EADJ,oBACuBa,EADvB,8DAKb,SAASQ,EAAkBC,GAChC,OAAOP,EAAY,GAAD,OACbD,EADa,iCACoBD,EADpB,kBACqCS,EADrC","sources":["components/MovieInfo/MovieInfo.jsx","components/MovieInfo/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/movies-api.js"],"sourcesContent":["const imgUrl = 'https://image.tmdb.org/t/p/w400';\n\nexport default function MovieInfo({ movie }) {\n  return (\n    <div>\n      <img\n        src={\n          movie.poster_path\n            ? `${imgUrl}${movie.poster_path}`\n            : `${process.env.PUBLIC_URL}/sorry-poster.jpg`\n        }\n        alt={movie.title}\n      />\n      <h2>\n        {movie.original_title}\n        <span>({movie.release_date.slice(0, 4)})</span>\n      </h2>\n      <p>\n        User score:\n        <span>{movie.vote_average * 10} %</span>\n      </p>\n      <p>Overview </p>\n      <p>{movie.overview}</p>\n      <div>\n        <span>Genres:</span>\n        <ul>\n          {movie.genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { Outlet } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        <li>\n          <NavLink to=\"cast\" state={{ from: location }}>\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { Route, Routes, useParams, useNavigate } from 'react-router-dom';\nimport MovieInfo from '../../components/MovieInfo/MovieInfo';\nimport * as movieApi from '../../services/movies-api';\nimport MovieDetails from 'components/MovieInfo/MovieDetails';\nimport Spinner from 'react-spinkit';\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  let navigate = useNavigate();\n  useEffect(() => {\n    movieApi.fetchMovieById(movieId).then(movie => {\n      setMovie(movie);\n    });\n  }, [movieId]);\n  const onBtnClick = () => {\n    navigate('/');\n  };\n  return (\n    <>\n      <button onClick={onBtnClick}>Go back </button>\n      {movie && <MovieInfo movie={movie} />}\n      {movie && (\n        <div>\n          <h3>Additional information</h3>\n          <Suspense\n            fallback={<Spinner name=\"ball-spin-fade-loader\" color=\"#0e0a06\" />}\n          >\n            <Routes>\n              <Route path=\"\" element={<MovieDetails />}>\n                <Route path=\"cast\" element={<Cast movie={movie} />} />\n                <Route path=\"reviews\" element={<Reviews movie={movie} />} />\n              </Route>\n            </Routes>\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst API_KEY = '025512eaa3724bc89359bc473e706bcf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchMovies(url = '') {\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport function fetchTrandMovie() {\n  return fetchMovies(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US&append_to_response=reviews,credits,videos`\n  );\n}\n\nexport function fetchMovieByQuery(searchQuery) {\n  return fetchMovies(\n    `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n}\n"],"names":["MovieInfo","movie","src","poster_path","process","alt","title","original_title","release_date","slice","vote_average","overview","genres","map","genre","name","id","MovieDetails","location","useLocation","to","state","from","Cast","lazy","Reviews","MovieDetailsPage","useState","setMovie","movieId","useParams","navigate","useNavigate","useEffect","movieApi","then","onClick","Suspense","fallback","color","path","element","API_KEY","BASE_URL","fetchMovies","url","axios","data","fetchTrandMovie","fetchMovieById","fetchMovieByQuery","searchQuery"],"sourceRoot":""}