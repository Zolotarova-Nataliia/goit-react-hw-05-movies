{"version":3,"file":"static/js/305.8a1e120a.chunk.js","mappings":"0MAEaA,EAAWC,EAAAA,GAAAA,IAAH,qVAcRC,EAAUD,EAAAA,GAAAA,IAAH,+EAKPE,EAAcF,EAAAA,GAAAA,IAAH,iFAMXG,EAAYH,EAAAA,GAAAA,GAAH,+E,4BCKtB,EA3BkB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,WACE,UAAC,KAAD,CACEQ,GAAI,CACFC,SAAS,WAAD,OAAaJ,EAAMK,IAC3BC,MAAO,CAAEC,KAAMN,IAHnB,WAME,SAACH,EAAD,WACE,SAACD,EAAD,CACEW,IACER,EAAMS,YAAN,UAfC,mCAeD,OACgBT,EAAMS,aADtB,UAEOC,2BAFP,qBAIFC,IAAKX,EAAMY,WAIf,UAACb,EAAD,eAAaC,EAAMa,wBCxBdC,EAAmBlB,EAAAA,GAAAA,GAAH,6IAOhBmB,EAAiBnB,EAAAA,GAAAA,GAAH,8CCM3B,EAZmB,SAAC,GAAgB,IAAdoB,EAAa,EAAbA,OACpB,OACE,SAACF,EAAD,UACGE,EAAOC,QAAQC,KAAI,SAAAlB,GAAK,OACvB,SAACe,EAAD,WACE,SAAC,EAAD,CAAWf,MAAOA,KADCA,EAAMK,W,2JCNtBc,EAAavB,EAAAA,GAAAA,IAAH,8FAKVwB,EAAaxB,EAAAA,GAAAA,KAAH,qXAeVyB,EAAYzB,EAAAA,GAAAA,OAAH,uWAqBT0B,EAAc1B,EAAAA,GAAAA,MAAH,sR,SC7BT,SAAS2B,IAAc,IAAD,EACnC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,GAA2BH,GAAOI,KAAKR,KAExC,CAACI,IAWJ,OACE,iCACE,SAACV,EAAD,WACE,UAACC,EAAD,CAAYc,SAZG,SAAAC,GACnBA,EAAIC,iBACJC,QAAQC,IAAIH,EAAII,eAChB,IAAMV,EAAQM,EAAII,cAAcC,SAASX,MAAMY,MAAMC,OACvC,KAAVb,GAGJD,EAAgB,CAAEC,MAAAA,KAKd,WACE,SAACP,EAAD,CACEqB,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,aAAcnB,KAEhB,SAACR,EAAD,CAAWsB,KAAK,SAAhB,UACE,SAAC,MAAD,YAIN,SAACxB,EAAD,UAAaH,IAAU,SAACiC,EAAA,EAAD,CAAYjC,OAAQA,W,0JC/C3CkC,G,QAAU,oCACVC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAjC,SACyBC,IAAAA,IAAUD,GADnC,uBACUE,EADV,EACUA,KADV,kBAESA,GAFT,mEAKO,SAASC,IACd,OAAOJ,EAAY,GAAD,OAAID,EAAJ,sCAA0CD,IAGvD,SAASO,EAAeC,GAC7B,OAAON,EAAY,GAAD,OACbD,EADa,iBACIO,EADJ,oBACuBR,EADvB,8DAKb,SAASS,EAAkBC,GAChC,OAAOR,EAAY,GAAD,OACbD,EADa,iCACoBD,EADpB,kBACqCU,EADrC","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrap = styled.div`\n  width: 22vw;\n  text-align: center;\n  border: 3px solid #ffff;\n  transition: all 0.3s;\n  &:hover {\n    border: 3px solid rgb(234, 29, 111);\n    -webkit-box-shadow: 0 0 40px rgb(234, 29, 111);\n    -moz-box-shadow: 0 0 40px #ffff;\n    box-shadow: 0 0 40px rgb(234, 29, 111);\n    transform: scale(1.05);\n  }\n`;\n\nexport const CardImg = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n`;\nexport const CardImgWrap = styled.div`\n  height: 450px;\n  width: 100%;\n  overflow-y: hidden;\n`;\n\nexport const CardTitle = styled.h2`\n  padding: 10px;\n  font-size: 20px;\n  color: #ffff;\n`;\n","import { CardWrap, CardImg, CardTitle } from './MovieCard.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CardImgWrap } from './MovieCard.styled';\nconst imgUrl = 'https://image.tmdb.org/t/p/w400';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <CardWrap>\n      <Link\n        to={{\n          pathname: `/movies/${movie.id}`,\n          state: { from: location },\n        }}\n      >\n        <CardImgWrap>\n          <CardImg\n            src={\n              movie.poster_path\n                ? `${imgUrl}${movie.poster_path}`\n                : `${process.env.PUBLIC_URL}/sorry-poster.jpg`\n            }\n            alt={movie.title}\n          />\n        </CardImgWrap>\n\n        <CardTitle> {movie.original_title}</CardTitle>\n      </Link>\n    </CardWrap>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const StyledMoviesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 1em;\n  list-style: none;\n  padding: 40px;\n`;\nexport const StyledMoviesEl = styled.li`\n  padding-top: 15px;\n`;\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport { StyledMoviesList, StyledMoviesEl } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <StyledMoviesList>\n      {movies.results.map(movie => (\n        <StyledMoviesEl key={movie.id}>\n          <MovieCard movie={movie} />\n        </StyledMoviesEl>\n      ))}\n    </StyledMoviesList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\nexport const SearchWrap = styled.div`\n  align-items: center;\n  justify-content: center;\n  display: flex;\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  margin-top: 40px;\n  align-items: center;\n  justify-content: center;\n  width: 800px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 3px solid rgb(234, 29, 111);\n  -webkit-box-shadow: 0 0 40px rgb(234, 29, 111);\n  -moz-box-shadow: 0 0 40px #ffff;\n  box-shadow: 0 0 40px rgb(234, 29, 111);\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  transition: all 0.3s;\n  > svg {\n    width: 26px;\n    height: 26px;\n  }\n  &:hover {\n    > svg {\n      fill: rgb(234, 29, 111);\n    }\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  transition: all 0.3s;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { BsSearch } from 'react-icons/bs';\nimport * as movieApi from '../../services/movies-api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport {\n  SearchForm,\n  SearchBtn,\n  SearchInput,\n  SearchWrap,\n} from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query) {\n      movieApi.fetchMovieByQuery(query).then(setMovies);\n    }\n  }, [query]);\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    console.log(evt.currentTarget);\n    const query = evt.currentTarget.elements.query.value.trim();\n    if (query === '') {\n      return;\n    }\n    setSearchParams({ query });\n  };\n  return (\n    <>\n      <SearchWrap>\n        <SearchForm onSubmit={onFormSubmit}>\n          <SearchInput\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search your film\"\n            defaultValue={query}\n          ></SearchInput>\n          <SearchBtn type=\"submit\">\n            <BsSearch />\n          </SearchBtn>\n        </SearchForm>\n      </SearchWrap>\n      <SearchWrap>{movies && <MoviesList movies={movies} />}</SearchWrap>\n    </>\n  );\n}\n","import axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst API_KEY = '025512eaa3724bc89359bc473e706bcf';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchMovies(url = '') {\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport function fetchTrandMovie() {\n  return fetchMovies(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US&append_to_response=reviews,credits,videos`\n  );\n}\n\nexport function fetchMovieByQuery(searchQuery) {\n  return fetchMovies(\n    `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n}\n"],"names":["CardWrap","styled","CardImg","CardImgWrap","CardTitle","movie","location","useLocation","to","pathname","id","state","from","src","poster_path","process","alt","title","original_title","StyledMoviesList","StyledMoviesEl","movies","results","map","SearchWrap","SearchForm","SearchBtn","SearchInput","MoviesPage","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","movieApi","then","onSubmit","evt","preventDefault","console","log","currentTarget","elements","value","trim","type","name","autoComplete","autoFocus","placeholder","defaultValue","MoviesList","API_KEY","BASE_URL","fetchMovies","url","axios","data","fetchTrandMovie","fetchMovieById","movieId","fetchMovieByQuery","searchQuery"],"sourceRoot":""}